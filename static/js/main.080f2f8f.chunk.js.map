{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortBy","goodsFromServer","App","useState","Default","sortField","setSortField","reverseField","setReverseField","sortedPeople","goods","sort","reverse","visibleGoods","Alphabet","good1","good2","localeCompare","Length","length","getSortedPeople","className","type","cn","onClick","Reverse","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,oBAAAA,E,gBAAAA,E,kBAAAA,E,YAAAA,M,KAqCE,IAAME,EAAgB,WAC3B,MAAkCC,mBAAiBH,EAAOI,SAA1D,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCH,oBAA2B,GAAnE,mBAAOI,EAAP,KAAqBC,EAArB,KAEMC,EAlCR,SACEC,EACAC,EACAC,GAEA,IAAIC,EAAsB,YAAOH,GAEjC,OAAQC,GACN,KAAKX,EAAOc,SACVD,EAAeA,EAAaF,MAAK,SAC/BI,EAAeC,GADgB,OAE5BD,EAAME,cAAcD,MACzB,MACF,KAAKhB,EAAOkB,OACVL,EAAeA,EAAaF,MAAK,SAC/BI,EAAeC,GADgB,OAE5BD,EAAMI,OAASH,EAAMG,UAC1B,MACF,QACEN,EAAY,UAAOZ,GAQvB,OAJIW,IACFC,EAAeA,EAAaD,WAGvBC,EAOcO,CACnBnB,EACAI,EACAE,GAGF,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBACZ,CAAE,WAAYlB,IAAcL,EAAOc,WACrCU,QAAS,kBAAMlB,EAAaN,EAAOc,WAJrC,iCASA,wBACEQ,KAAK,SACLD,UAAWE,IAAG,oBACZ,CAAE,WAAYlB,IAAcL,EAAOkB,SACrCM,QAAS,kBAAMlB,EAAaN,EAAOkB,SAJrC,4BASA,wBACEI,KAAK,SACLD,UAAWE,IAAG,oBACZ,CAAE,WAAYhB,IAAiBP,EAAOyB,UACxCD,QAAS,kBAAMhB,EAAgBD,IAAiBP,EAAOyB,SAEnDzB,EAAOyB,UANb,sBAWEpB,GAAaE,IACb,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPlB,EAAaN,EAAOI,SACpBI,GAAgB,IALpB,sBAaJ,6BACGC,EAAaiB,KAAI,SAACC,GAAD,OAChB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC9GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.080f2f8f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortBy {\n  Alphabet = 'Alphabet',\n  Length = 'Length',\n  Reverse = 'Reverse',\n  Default = '',\n}\n\nfunction getSortedPeople(\n  goods: string[],\n  sort: SortBy,\n  reverse: SortBy | boolean,\n): string[] {\n  let visibleGoods: string[] = [...goods];\n\n  switch (sort) {\n    case SortBy.Alphabet:\n      visibleGoods = visibleGoods.sort((\n        good1: string, good2: string,\n      ) => good1.localeCompare(good2));\n      break;\n    case SortBy.Length:\n      visibleGoods = visibleGoods.sort((\n        good1: string, good2: string,\n      ) => good1.length - good2.length);\n      break;\n    default:\n      visibleGoods = [...goodsFromServer];\n      break;\n  }\n\n  if (reverse) {\n    visibleGoods = visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState<SortBy>(SortBy.Default);\n  const [reverseField, setReverseField] = useState<SortBy | boolean>(false);\n\n  const sortedPeople = getSortedPeople(\n    goodsFromServer,\n    sortField,\n    reverseField,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': sortField !== SortBy.Alphabet })}\n          onClick={() => setSortField(SortBy.Alphabet)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': sortField !== SortBy.Length })}\n          onClick={() => setSortField(SortBy.Length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning',\n            { 'is-light': reverseField !== SortBy.Reverse })}\n          onClick={() => setReverseField(reverseField === SortBy.Reverse\n            ? false\n            : SortBy.Reverse)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverseField) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField(SortBy.Default);\n              setReverseField(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedPeople.map((good: string) => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}